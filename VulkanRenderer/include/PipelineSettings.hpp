#pragma once
#include <stdint.h>

namespace sa {

	typedef uint16_t CullModeFlags;

	enum Topology {
		POINT_LIST,
		LINE_LIST,
		LINE_STRIP,
		TRIANGLE_LIST,
		TRIANGLE_STRIP,
		TRIANGLE_FAN,
		LINE_LIST_WITH_ADJACENCY,
		LINE_STRIP_WITH_ADJACENCY,
		TRIANGLE_LIST_WITH_ADJACENCY,
		TRIANGLE_STRIP_WITH_ADJACENCY,
		PATCH_LIST
	};

	enum CullModeFlagBits : CullModeFlags {
		NONE,
		FRONT,
		BACK
	};

	enum PolygonMode {
		FILL,
		LINE,
		POINT
	};

    // Vulkan 1.3 values
	enum DynamicState {
        VIEWPORT = 0,
        SCISSOR = 1,
        LINE_WIDTH = 2,
        DEPTH_BIAS = 3,
        BLEND_CONSTANTS = 4,
        DEPTH_BOUNDS = 5,
        STENCIL_COMPARE_MASK = 6,
        STENCIL_WRITE_MASK = 7,
        STENCIL_REFERENCE = 8,
        CULL_MODE = 1000267000,
        FRONT_FACE = 1000267001,
        PRIMITIVE_TOPOLOGY = 1000267002,
        VIEWPORT_WITH_COUNT = 1000267003,
        SCISSOR_WITH_COUNT = 1000267004,
        VERTEX_INPUT_BINDING_STRIDE = 1000267005,
        DEPTH_TEST_ENABLE = 1000267006,
        DEPTH_WRITE_ENABLE = 1000267007,
        DEPTH_COMPARE_OP = 1000267008,
        DEPTH_BOUNDS_TEST_ENABLE = 1000267009,
        STENCIL_TEST_ENABLE = 1000267010,
        STENCIL_OP = 1000267011,
        RASTERIZER_DISCARD_ENABLE = 1000377001,
        DEPTH_BIAS_ENABLE = 1000377002,
        PRIMITIVE_RESTART_ENABLE = 1000377004,
        VIEWPORT_W_SCALING_NV = 1000087000,
        DISCARD_RECTANGLE_EXT = 1000099000,
        SAMPLE_LOCATIONS_EXT = 1000143000,
        RAY_TRACING_PIPELINE_STACK_SIZE_KHR = 1000347000,
        VIEWPORT_SHADING_RATE_PALETTE_NV = 1000164004,
        VIEWPORT_COARSE_SAMPLE_ORDER_NV = 1000164006,
        EXCLUSIVE_SCISSOR_NV = 1000205001,
        FRAGMENT_SHADING_RATE_KHR = 1000226000,
        LINE_STIPPLE_EXT = 1000259000,
        VERTEX_INPUT_EXT = 1000352000,
        PATCH_CONTROL_POINTS_EXT = 1000377000,
        LOGIC_OP_EXT = 1000377003,
        COLOR_WRITE_ENABLE_EXT = 1000381000
	};

	struct PipelineSettings {
		Topology topology = Topology::TRIANGLE_LIST;
		CullModeFlags cullMode = CullModeFlagBits::BACK;
		PolygonMode polygonMode = PolygonMode::FILL;
		bool depthTestEnabled = true;
        uint32_t tessellationPathControllPoints = 3;
        std::vector<DynamicState> dynamicStates;
	};
}