#version 450

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 0) uniform Config{
    uvec2 imageSize;
} config;

layout(set = 0, binding = 1) uniform sampler2D sourceImage;

layout(set = 0, binding = 2, rgba32f) uniform image2D outputImage;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}


void main() {
    //grab global ID
	vec2 uv = gl_GlobalInvocationID.xy / config.imageSize;
    //make sure we dont access past the buffer size
    vec4 color = texture(sourceImage, uv);
    imageStore(outputImage, ivec2(gl_GlobalInvocationID.xy), color);

    
}